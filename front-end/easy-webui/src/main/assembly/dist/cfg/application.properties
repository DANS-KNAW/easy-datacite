#
# EASY Web-UI configuration file
#
# Please, modify the configuration below to match your environment. At the very least,
# you will need to fill in the places starting with ### below. Notice the 
# additional comments about what values to fill in.
#
# If all supporting services are located on the same host (using default ports) fill in
# the hostname here (e.g. 'localhost' for the same host as easy-webui).  Otherwise change
# the instances of ${easy.host} below appropriately. 
easy.host={{ easy_webui_host }}

# OpenLDAP user database
ldap.providerURL=ldap://${easy.host}:389
ldap.securityPrincipal=cn=ldapadmin,dc=dans,dc=knaw,dc=nl
ldap.securityCredentials={{ easy_webui_ldapadmin_password }}
ldap.context.users=ou=users,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.groups=ou=groups,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.migration=ou=migration,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.federation=ou=federation,ou=easy,dc=dans,dc=knaw,dc=nl

# Federation login support
easy.federationLogin.enabled={{ easy_webui_federation_login_enabled }}
easy.federationLogin.debug.enabled=false
easy.federationLogin.debug.user.file=/tmp/feduser.properties
#
# The URL used to start a federated login procedure using Shibboleth
easy.federationLogin.federationUrl={{ easy_webui_federation_login_url }}
#
# There is also an attribute Shib-Session-ID (with dashes instead of underscores)
# but we use Shib_eduPersonPN to check for a session, because we need that property
# anyway and if it is not present there might as well be no session at all.
easy.federationLogin.propertyMapping.shibSessionId=Shib_eduPersonPN
#
# globally unique ID for the federation account, used to map the federation account to an EASY account. This should
# normally be the standard REMOTE_USER CGI var.
easy.federationLogin.propertyMapping.remoteUser=Shib_eduPersonPN
easy.federationLogin.propertyMapping.email=Shib_email
easy.federationLogin.propertyMapping.firstName=Shib_givenName
easy.federationLogin.propertyMapping.surname=Shib_surName
easy.federationLogin.propertyMapping.organization=Shib_HomeOrg

# Fedora Resource Index
fedora.ri.url=http://${easy.host}:8080/fedora/risearch

# Fedora server
easy.store.name=easy_local
fedora.base.url=http://${easy.host}:8080/fedora
fedora.admin.username={{ easy_webui_fedora_username }}
fedora.admin.userpass={{ easy_webui_fedora_password }}

# Easy database
fedora.db.username={{ easy_webui_easy_fs_rdb_username }}
fedora.db.password={{ easy_webui_easy_fs_rdb_password }}
fedora.db.connectionUrl=jdbc:postgresql://${easy.host}:5432/easy_db
fedora.db.hbnDriverClass=org.postgresql.Driver
fedora.db.hbnDialect=org.hibernate.dialect.PostgreSQLDialect

# Persistent Identifier Generator
# developers should use localhost and
# run mvn goal "jetty:run" on project pid-generator with JVM arguments: -Djetty.port=8082
pid.service.base.url=http://${easy.host}:8082

# DOI registration
datacite.registration.doi.uri={{ easy_webui_datacite_doi_registration_uri }}
datacite.registration.metadata.uri={{ easy_webui_datacite_metadata_registration_uri }}
datacite.username={{ easy_webui_datacite_username }}
datacite.password={{ easy_webui_datacite_password }}

# for development: replace '/ui' with ':8081'
dataset.resolver.uri={{ easy_webui_dataset_resolver_uri }}

# SORL search index
solr.url=http://${easy.host}:8080/solr

# Audit
business.audit.enabled=false
business.audit.file={{ easy_webui_audit_log }}

# Host running the SMTP service
mail.smtp.host=${easy.host}
#
# The e-mail address to show as sender in automatic E-mails
mail.fromAddress={{ easy_webui_mail_from_address }}
#
# Comma-separated list of e-mail addresses to send a copy of all notification 
# mails to users.  This can be used to debug problems with automatic mails.
# Leave blank if no BCC-mails are required
mail.bccs={{ easy_webui_bccs_list }}

# When to send admin mails
admin.mailer.sendOnStarting={{ easy_webui_send_mail_on_starting }}
admin.mailer.sendOnClosing={{ easy_webui_send_mail_on_closing }}
#
# Comma-separated list of e-mail addresses to send admin mails to 
admin.mailer.addresses={{ easy_webui_admin_mailer_recipients }}

# Limits in MB and number of files to download 
data.downloadLimit={{ easy_webui_data_download_limit }}
file.downloadLimit={{ easy_webui_files_download_limit }}

# Process Data File Instructions files. These are used to create externally stored file
# items.
process-data-file-instructions={{ easy_webui_process_data_file_instructions }}

# Location of the resources needed by the license creator
license.resources={{ easy_webui_license_resources }}

# Location of the content that is editable through the Web UI. It is HIGHLY RECOMMENDED
# that you copy the example initial content in ${EASY_WEBUI_HOME}/res/example/editable to 
# a location outside the installation directory and modify below property to point to that
# direction.  Notice also that this new location mus be writeable by the Linux user running
# Tomcat.  
easy.editable.content.root={{ easy_webui_editable_content_root }}

#
# Location of the masterkey file containing the SHA-1 hash of the masterkey password.  
# If not specified or present, the masterkey is disabled.
#
easy.admin.masterkeyfile={{ easy_webui_masterkeyfile }}

# Base URL of the deposit instruction files
easy.link-base.instructions={{ easy_webui_linkbase_instructions }}

# URLs of footer links
easy.link.using-easy=http://www.dans.knaw.nl/en/content/data-archive
easy.link.contact=http://dans.knaw.nl/en/contact
easy.link.disclaimer=http://dans.knaw.nl/en/about/services/data-archiving-and-reuse/easy/disclaimer-easy
easy.link.legal=http://www.dans.knaw.nl/nl/over/organisatie-beleid/juridische-informatie
easy.link.property-right-statement=http://www.dans.knaw.nl/en/about/organisation-and-policy/legal-information/property-rights-statement
easy.link.reusing-data=http://dans.knaw.nl/en/search/about-reusing-data
easy.link.certificering=http://www.dans.knaw.nl/nl/over/organisatie-beleid/Certificering
easy.link.about-depositing-data={{ easy_webui_about_depositing_data }}

# Credentials for the Archaeological Pakbon validation service
pakbon.validator.username={{ easy_webui_pakbon_service_username }}
pakbon.validator.password={{ easy_webui_pakbon_service_password }}

# Location of the file that stores the read-only status of EASY. This should point
# to a writable location, but it is not necessary for the file to exist; EASY will
# create it.
easy.business.system.status.file={{ easy_webui_system_status_file }}

easy.audio-video.player-url={{ easy_webui_audio_video_player_url }}
easy.audio-video.ticket-service.url={{ easy_webui_audio_video_ticket_service_url }}
easy.audio-video.ticket-service.ticket-duration-ms={{ easy_webui_audio_video_ticket_service_ticket_duration_ms }}

# The Piwik site id for the EASY site usage tracking; for testing use 7
easy.piwik.site-id={{ easy_webui_piwik_site_id }}
